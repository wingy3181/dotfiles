#!/usr/bin/env bash

cmd_exists() {
    command -v "$1" &> /dev/null
}

open_url() {

    if cmd_exists "open"; then
        open "$1"
    fi

}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

main() {

    declare -r MAX_NUMBER_OF_TRIES=10
    local i=0
    local port="${1:-8000}"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Wait for the server to be available, and once
    # it is, open its address in the default browser.

    while [ $i -lt $MAX_NUMBER_OF_TRIES ]; do
        # lsof : list open files (and remember, in UNIX just about everything (including a network socket) is a file)
        #   -i : select the listing of all Internet and x.25 (HP-UX) network files
        #   -n : inhibit conversion of network number to host names for network files
        #   -P : inhibit conversion of port number to port name for network files
        # grep -i : ignore case
        if [ "$(lsof -i -nP | grep "$port" | grep -i "python")" != "" ]; then
            open_url "http://localhost:${port}/"
            break;
        fi
        i=$(( i + 1 ))
        sleep 1 # sleep 1 second
    done &

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Start server.

    "$(dirname "${BASH_SOURCE[0]}")/server.py" "$port"

}

# Start an HTTP server from a directory, optionally specifying the port
# $1 : Port to start server on (defaults to 8000)
main "$@"
