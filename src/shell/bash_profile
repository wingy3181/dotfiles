#!/usr/bin/env bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

source_bash_files() {

    local file=""
    local i=""

    declare -r -a FILES_TO_SOURCE=(
        "bash_aliases"
        "bash_autocomplete"
        "bash_bash-it"
        "bash_exports"
        "bash_functions"
        "bash_options"
        "bash_prompt"
        "bash_z"
        "bash.local"  # for local settings that should
                      # not be under version control
    )

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    for i in ${!FILES_TO_SOURCE[*]}; do

        file="$HOME/.${FILES_TO_SOURCE[$i]}"
        # -r : True if file exists and is readable.
        [ -r "$file" ] \
            && . "$file"

    done

}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

source_bash_files
unset -f source_bash_files

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Clear system messages (e.g.: system copyright notice, the
# date and time of the last login, the message of the day, etc.)

if test -z "$TMUX"; then eval clear; fi

# sdkman init snippet. See install script at https://get.sdkman.io/
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="${HOME}/.sdkman"
[[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && . "${SDKMAN_DIR}/bin/sdkman-init.sh" || return 0
